<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Database_Model_Producto', 'doctrine');

/**
 * Database_Model_Base_Producto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_producto
 * @property string $nombre
 * @property float $precio
 * @property float $costo
 * @property float $precio_descuento
 * @property integer $descuento_activado
 * @property string $status
 * @property string $codbarras
 * @property integer $id_proveedor
 * @property integer $id_marca
 * @property float $multiplicador
 * @property integer $id_categoria
 * @property timestamp $fecha_registro
 * @property string $codinter
 * @property string $condiciones
 * @property integer $exento_iva
 * @property float $ieps
 * @property integer $paquete
 * @property float $alerta_minima
 * @property integer $exento_ieps
 * @property float $precio_costo
 * @property string $imagen
 * @property Database_Model_Categoria $Categoria
 * @property Database_Model_Marca $Marca
 * @property Database_Model_Proveedor $Proveedor
 * @property Doctrine_Collection $EntradaProducto
 * @property Doctrine_Collection $Paquete
 * @property Doctrine_Collection $ProductoTienda
 * @property Doctrine_Collection $SalidaProducto
 * @property Doctrine_Collection $TraspasoProducto
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Database_Model_Base_Producto extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('producto');
        $this->hasColumn('id_producto', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('nombre', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('precio', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('costo', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('precio_descuento', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('descuento_activado', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => 'ACTIVO',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('codbarras', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_proveedor', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_marca', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('multiplicador', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_categoria', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('fecha_registro', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('codinter', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('condiciones', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('exento_iva', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ieps', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('paquete', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('alerta_minima', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('exento_ieps', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('precio_costo', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('imagen', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('manual','integer', 1, array(
            'type' => 'integer',
            'length' => 1,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'default' => '0',
            'notnull' => false,
            'autoincrement' => false,
        ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Database_Model_Categoria as Categoria', array(
             'local' => 'id_categoria',
             'foreign' => 'id_categoria'));

        $this->hasOne('Database_Model_Marca as Marca', array(
             'local' => 'id_marca',
             'foreign' => 'id_marca'));

        $this->hasOne('Database_Model_Proveedor as Proveedor', array(
             'local' => 'id_proveedor',
             'foreign' => 'id_proveedor'));

        $this->hasMany('Database_Model_EntradaProducto as EntradaProducto', array(
             'local' => 'id_producto',
             'foreign' => 'id_producto'));

        $this->hasMany('Database_Model_Paquete as Paquete', array(
             'local' => 'id_producto',
             'foreign' => 'id_producto'));

        $this->hasMany('Database_Model_ProductoTienda as ProductoTienda', array(
             'local' => 'id_producto',
             'foreign' => 'id_producto'));

        $this->hasMany('Database_Model_SalidaProducto as SalidaProducto', array(
             'local' => 'id_producto',
             'foreign' => 'id_producto'));

        $this->hasMany('Database_Model_TraspasoProducto as TraspasoProducto', array(
             'local' => 'id_producto',
             'foreign' => 'id_producto'));
    }
}