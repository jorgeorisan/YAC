<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Database_Model_ProductosVenta', 'doctrine');

/**
 * Database_Model_Base_ProductosVenta
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id_productos_venta
 * @property integer $id_venta
 * @property float $cantidad
 * @property string $nombre
 * @property float $total
 * @property integer $cancelado
 * @property integer $id_productotienda
 * @property float $costototal
 * @property string $status
 * @property integer $folio
 * @property integer $paquete
 * @property string $tipoprecio
 * @property Database_Model_ProductoTienda $ProductoTienda
 * @property Database_Model_Venta $Venta
 * @property Doctrine_Collection $VentaProductocancelado
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Database_Model_Base_ProductosVenta extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('productos_venta');
        $this->hasColumn('id_productos_venta', 'integer', 8, array(
            'type' => 'integer',
            'length' => 8,
            'fixed' => false,
            'unsigned' => false,
            'primary' => true,
            'autoincrement' => true,
        ));
        $this->hasColumn('id_venta', 'integer', 8, array(
            'type' => 'integer',
            'length' => 8,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => true,
            'autoincrement' => false,
        ));
        $this->hasColumn('cantidad', 'float', null, array(
            'type' => 'float',
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('nombre', 'string', 45, array(
            'type' => 'string',
            'length' => 45,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('total', 'float', null, array(
            'type' => 'float',
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('cancelado', 'integer', 1, array(
            'type' => 'integer',
            'length' => 1,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'default' => '0',
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('id_productotienda', 'integer', 4, array(
            'type' => 'integer',
            'length' => 4,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => true,
            'autoincrement' => false,
        ));
        $this->hasColumn('costototal', 'float', null, array(
            'type' => 'float',
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'default' => '0',
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('status', 'string', 45, array(
            'type' => 'string',
            'length' => 45,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'default' => 'ACTIVO',
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('folio', 'integer', 4, array(
            'type' => 'integer',
            'length' => 4,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('paquete', 'integer', 4, array(
            'type' => 'integer',
            'length' => 4,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'default' => '0',
            'notnull' => false,
            'autoincrement' => false,
        ));
        $this->hasColumn('tipoprecio', 'string', 45, array(
            'type' => 'string',
            'length' => 45,
            'fixed' => false,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
        ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Database_Model_ProductoTienda as ProductoTienda', array(
            'local' => 'id_productotienda',
            'foreign' => 'id_productotienda'));

        $this->hasOne('Database_Model_Venta as Venta', array(
            'local' => 'id_venta',
            'foreign' => 'id_venta'));

        $this->hasMany('Database_Model_VentaProductocancelado as VentaProductocancelado', array(
            'local' => 'id_productos_venta',
            'foreign' => 'id_productos_venta'));
    }
}