<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Database_Model_Cita', 'doctrine');

/**
 * Database_Model_Base_Cita
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_tienda
 * @property integer $id_persona
 * @property integer $id_user
 * @property integer $id_usuarioalta
 * @property string $motivo
 * @property string $status
 * @property timestamp $fecha_inicial
 * @property timestamp $fecha_final
 * @property timestamp $created_date
 * @property timestamp $updated_date
 * @property timestamp $deleted_date
 * @property Database_Model_Persona $Persona
 * @property Database_Model_Tienda $Tienda
 * @property Database_Model_Usuario $Usuario
 * @property Database_Model_Usuario $Usuario_4
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Database_Model_Base_Cita extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('cita');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('id_tienda', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_persona', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_usuarioalta', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('motivo', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => 'active',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fecha_inicial', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fecha_final', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('created_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('updated_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('deleted_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Database_Model_Persona as Persona', array(
             'local' => 'id_persona',
             'foreign' => 'id_persona'));

        $this->hasOne('Database_Model_Tienda as Tienda', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasOne('Database_Model_Usuario as Usuario', array(
             'local' => 'id_user',
             'foreign' => 'id'));

        $this->hasOne('Database_Model_Usuario as Usuario_4', array(
             'local' => 'id_usuarioalta',
             'foreign' => 'id'));
    }
}