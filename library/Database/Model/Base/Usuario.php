<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Database_Model_Usuario', 'doctrine');

/**
 * Database_Model_Base_Usuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $id_usuario
 * @property string $password
 * @property string $session_id
 * @property string $status
 * @property integer $id_usuario_tipo
 * @property string $nombre
 * @property integer $id_tienda
 * @property string $permisos
 * @property float $comision
 * @property string $direccion
 * @property string $costos
 * @property string $email
 * @property Database_Model_UsuarioTipo $UsuarioTipo
 * @property Database_Model_Tienda $Tienda
 * @property Doctrine_Collection $Cita
 * @property Doctrine_Collection $Cita_4
 * @property Doctrine_Collection $Deudores
 * @property Doctrine_Collection $Entrada
 * @property Doctrine_Collection $Historial
 * @property Doctrine_Collection $HistorialInventario
 * @property Doctrine_Collection $Pedido
 * @property Doctrine_Collection $PermisoUsuario
 * @property Doctrine_Collection $Salida
 * @property Doctrine_Collection $Traspaso
 * @property Doctrine_Collection $Venta
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Database_Model_Base_Usuario extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('id_usuario', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('password', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('session_id', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => 'ACTIVO',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_usuario_tipo', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nombre', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_tienda', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('permisos', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => 'TODO',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('comision', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.06',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('direccion', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('costos', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Database_Model_UsuarioTipo as UsuarioTipo', array(
             'local' => 'id_usuario_tipo',
             'foreign' => 'id_usuario_tipo'));

        $this->hasOne('Database_Model_Tienda as Tienda', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_Cita as Cita', array(
             'local' => 'id',
             'foreign' => 'id_user'));

        $this->hasMany('Database_Model_Cita as Cita_4', array(
             'local' => 'id',
             'foreign' => 'id_usuarioalta'));

        $this->hasMany('Database_Model_Deudores as Deudores', array(
             'local' => 'id',
             'foreign' => 'id_user'));

        $this->hasMany('Database_Model_Entrada as Entrada', array(
             'local' => 'id',
             'foreign' => 'id_user'));

        $this->hasMany('Database_Model_Historial as Historial', array(
             'local' => 'id',
             'foreign' => 'id_user'));

        $this->hasMany('Database_Model_HistorialInventario as HistorialInventario', array(
             'local' => 'id',
             'foreign' => 'id_user'));

        $this->hasMany('Database_Model_Pedido as Pedido', array(
             'local' => 'id',
             'foreign' => 'id_user'));

        $this->hasMany('Database_Model_PermisoUsuario as PermisoUsuario', array(
             'local' => 'id',
             'foreign' => 'id_usuario'));

        $this->hasMany('Database_Model_Salida as Salida', array(
             'local' => 'id',
             'foreign' => 'id_user'));

        $this->hasMany('Database_Model_Traspaso as Traspaso', array(
             'local' => 'id',
             'foreign' => 'id_user'));

        $this->hasMany('Database_Model_Venta as Venta', array(
             'local' => 'id',
             'foreign' => 'id_user'));
    }
}