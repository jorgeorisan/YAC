<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Database_Model_Tienda', 'doctrine');

/**
 * Database_Model_Base_Tienda
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_tienda
 * @property string $nombre
 * @property string $telefono
 * @property string $info_adicional
 * @property string $status
 * @property string $ubicacion
 * @property integer $permiso_adicional
 * @property string $rfc
 * @property string $abreviacion
 * @property Doctrine_Collection $Cita
 * @property Doctrine_Collection $Entrada
 * @property Doctrine_Collection $EntradaProducto
 * @property Doctrine_Collection $Historial
 * @property Doctrine_Collection $Pedido
 * @property Doctrine_Collection $PedidoProducto
 * @property Doctrine_Collection $ProductoTienda
 * @property Doctrine_Collection $Salida
 * @property Doctrine_Collection $SalidaProducto
 * @property Doctrine_Collection $Traspaso
 * @property Doctrine_Collection $Traspaso_2
 * @property Doctrine_Collection $TraspasoProducto
 * @property Doctrine_Collection $Usuario
 * @property Doctrine_Collection $Venta
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Database_Model_Base_Tienda extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('tienda');
        $this->hasColumn('id_tienda', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('telefono', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('info_adicional', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => 'ACTIVA',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ubicacion', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('permiso_adicional', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('rfc', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('abreviacion', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Database_Model_Cita as Cita', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_Entrada as Entrada', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_EntradaProducto as EntradaProducto', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_Historial as Historial', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_Pedido as Pedido', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_PedidoProducto as PedidoProducto', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_ProductoTienda as ProductoTienda', array(
             'local' => 'id_tienda',
             'foreign' => 'tienda_id_tienda'));

        $this->hasMany('Database_Model_Salida as Salida', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_SalidaProducto as SalidaProducto', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_Traspaso as Traspaso', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_Traspaso as Traspaso_2', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tiendaanterior'));

        $this->hasMany('Database_Model_TraspasoProducto as TraspasoProducto', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_Usuario as Usuario', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));

        $this->hasMany('Database_Model_Venta as Venta', array(
             'local' => 'id_tienda',
             'foreign' => 'id_tienda'));
    }
}